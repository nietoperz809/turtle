/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package turtle;

import javax.swing.*;
import java.awt.*;

/**
 *
 * @author Administrator
 */
public class TestFrame extends javax.swing.JFrame 
{
    public Turtle turtle = new DoubleBufferedTurtle (800, 600); //new PdfTurtle (800, 600);//DoubleBufferedTurtle(800, 600);

    /**
     * Creates new form NewJFrame
     */
    public TestFrame()
    {
        initComponents();
        add(turtle, BorderLayout.CENTER);
        add(new JButton("hallo"), BorderLayout.NORTH);
        this.pack();
    }

    static void crazyBush (Turtle t) throws Exception
    {
        // Crazy Bush
        t.CmdSetPenPositionAbsolute(300, 600);
        t.CmdSetLindeLineLength(20.0);
        t.CmdSetLindeRecursionNumber(5);
        t.CmdSetLindeAngle(20.5);
        t.CmdSetLindeAxiom("x");
        t.CmdSetLindeRule("x->FF[+FFx]-FFx", 0.8);
        t.CmdSetLindeFinalRule("x->-R-F-R-F-R-F-R-F-R", 0.9);
        t.CmdLindeDraw();
        t.execute(t.getGraphics());
    }

    static void esoTree (Turtle t) throws Exception
    {
        // Crazy Bush
        t.CmdSetPenPositionAbsolute(300, 600);
        t.CmdSetLindeLineLength(5.0);
        t.CmdSetLindeRecursionNumber(12);
        t.CmdSetLindeAngle(20.5);
        t.CmdSetLindeAxiom("LFV");
        t.CmdSetLindeRule("L->LF", 1.0);
        t.CmdSetLindeRule("V->[+LFV][-LFV]", 1.0);
        //t.CmdSetLindeFinalRule("x->-R-F-R-F-R-F-R-F-R", 0.9);
        t.CmdLindeDraw();
        t.execute(t.getGraphics());
    }

    static void insel (Turtle t) throws Exception
    {
        // Crazy Bush
        t.CmdSetPenPositionAbsolute(300, 300);
        t.CmdSetLindeLineLength(5.0);
        t.CmdSetLindeRecursionNumber(2);
        t.CmdSetLindeAngle(90.0);
        t.CmdSetLindeAxiom("F+F+F+F");
        t.CmdSetLindeRule("f->ffff");
        t.CmdSetLindeRule("F->F+f-FF+F+FF+Ff+FF-f+FF-F-FF-Ff-FFF");
        //t.CmdSetLindeFinalRule("x->-R-F-R-F-R-F-R-F-R", 0.9);
        t.CmdLindeDraw();
        t.execute(t.getGraphics());
    }
    
    static void peanoKurve (Turtle t) throws Exception
    {
        t.CmdSetPenSize (0);
        t.CmdSetPenPositionAbsolute(600, 600);
        t.CmdSetLindeLineLength(7.0);
        t.CmdSetLindeRecursionNumber(4);
        t.CmdSetLindeAngle(90.0);
        t.CmdSetLindeAxiom("X");
        t.CmdSetLindeRule("X->XFYFX+F+YFXFY-F-XFYFX");
        t.CmdSetLindeRule("Y->YFXFY-F-XFYFX+F+YFXFY");
        //t.CmdSetLindeFinalRule("x->-R-F-R-F-R-F-R-F-R", 0.9);
        t.CmdLindeDraw();
        t.execute(t.getGraphics());
    }
    
    static void crazyRaute (Turtle t) throws Exception
    {
        t.CmdSetPenSize (0);
        t.CmdSetPenPositionAbsolute (506, 254); //(0,0); //(506, 254);
        t.CmdSetLindeLineLength(2.0);
        t.CmdSetLindeRecursionNumber(6);
        t.CmdSetLindeAngle(90.0);
        t.CmdSetLindeAxiom("F+XF+F+XF");
        t.CmdSetLindeRule("X->XF-F+F-XF+F+XF-F+F-X");
        t.CmdLindeDraw();
        
//        List<Command> list = t.getCommandList();
//        t.execute (new FakeGraphics());
//        Turtle.LindeResult res = t.getLindeResult();
//        
//        Rectangle rect = t.getGraphics().getClipBounds();
//        
//        System.out.println (res.minmax);
//        System.out.println (rect);
//
//        t.setCommandList(list);
        t.execute(t.getGraphics());
    }
    
    static void kochKurve (Turtle t) throws Exception
    {
        t.CmdSetPenPositionAbsolute(200, 300);
        t.CmdSetLindeLineLength(5.0);
        t.CmdSetLindeRecursionNumber(2);
        t.CmdSetLindeAngle(90.0);
        t.CmdSetLindeAxiom("F-F-F-F");
        t.CmdSetLindeRule("F->F+FF-FF-F-F+F+FF-F-F+F+FF+FF-F");
        //t.CmdSetLindeFinalRule("x->-R-F-R-F-R-F-R-F-R", 0.9);
        t.CmdLindeDraw();
        t.execute(t.getGraphics());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
    public static void main(String args[]) throws Exception
    {
        //test();
        TestFrame j = new TestFrame();
        crazyRaute (j.turtle);
        //peanoKurve (j.turtle);
        //kochKurve (j.turtle);
        //esoTree (j.turtle);
        //crazyBush (j.turtle);
        //insel(j.turtle);
        
        if (j.turtle instanceof PdfTurtle)
            System.exit(0);
        
        System.out.println (j.turtle.getLindeResult());
        j.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
